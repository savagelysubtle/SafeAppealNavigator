# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
test_env/
myenv

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
temp
tmp


.DS_Store

private_example.py
private_example

browser_cookies.json
cookies.json
AgentHistory.json
cv_04_24.pdf
AgentHistoryList.json
*.gif

# For Sharing (.pem files)
.gradio/

# For Docker
data/

# For Config Files (Current Settings)
.config.pkl
*.pdf

workflow

# ===========================================
# SECURITY: Additional exclusions for sensitive data
# ===========================================

# Database files - never commit these
*.db
*.sqlite
*.sqlite3
*.db-journal
*.sqlite-journal

# API Keys and secrets
.env
.env.*
!.env.example
secrets.json
config.json
credentials.json

# Personal browser data and profiles
**/PlaywrightProfile/
**/ChromeProfile/
**/BrowserProfile/

# Legal research data and case files
tmp/legal_research/
tmp/agent_history/
tmp/downloads/
tmp/webui_settings/
legal_research_data/
case_files/
research_cache/

# Personal configuration and cache
.vscode/settings.json
.cursor/
personal_settings/
user_config/

# Backup files that might contain sensitive data
*.bak
*.backup
*~
.#*

# Log files that might contain sensitive information
*.log
logs/
crash.log
debug.log

# OS generated files
Thumbs.db
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db

# Windows specific
desktop.ini
$RECYCLE.BIN/

# Archive files that might contain sensitive data
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# Temporary files
.tmp/
temp/
*.tmp
*.temp

# IDE and editor files
.vscode/
.cursor/
*.swp
*.swo
*~
.project
.classpath

# Test files that might contain sensitive data
test_data/
test_output/
test_results/

# Future Plans
plans/
plans/**
plans/**/*

# Github
.github/

# ===========================================
# DEVELOPMENT FILES: Temporary and cache files
# ===========================================

# Temporary files and directories (avoid .temp files)
*.tmp
*.temp
.temp/
temp/
tmp/
cache/
.cache/

# MCP cache directory
tmp/mcp_cache/

# Agent specific temporary directories
tmp/agent_history/
tmp/downloads/
tmp/legal_research/
tmp/deep_research/
tmp/webui_settings/
tmp/browser_data/
tmp/logs/

# Browser automation artifacts
browser_cookies.json
cookies.json
*.gif
profile/
user_data/

# Development artifacts that should not be committed
*.temp.json
*.temp.py
*_temp.*
temp_*

# But DO track dev configuration files
!dev/
!dev/**/*.json
!dev/**/*.py
!dev/**/*.md

# Archive
archive/
mcpExample.json
# Prevent test files with hardcoded secrets
